"use strict";(self.webpackChunkdocs_chasoft_net=self.webpackChunkdocs_chasoft_net||[]).push([[8457],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>m});var a=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=a.createContext({}),u=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=u(e.components);return a.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(t),m=o,k=d["".concat(s,".").concat(m)]||d[m]||p[m]||r;return t?a.createElement(k,i(i({ref:n},c),{},{components:t})):a.createElement(k,i({ref:n},c))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,i=new Array(r);i[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var u=2;u<r;u++)i[u]=t[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5162:(e,n,t)=>{t.d(n,{Z:()=>i});var a=t(7294),o=t(6010);const r="tabItem_Ymn6";function i(e){let{children:n,hidden:t,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,o.Z)(r,i),hidden:t},n)}},5488:(e,n,t)=>{t.d(n,{Z:()=>m});var a=t(7462),o=t(7294),r=t(6010),i=t(2389),l=t(7392),s=t(7094),u=t(2466);const c="tabList__CuJ",p="tabItem_LNqP";function d(e){var n,t;const{lazy:i,block:d,defaultValue:m,values:k,groupId:g,className:b}=e,f=o.Children.map(e.children,(e=>{if((0,o.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),y=null!=k?k:f.map((e=>{let{props:{value:n,label:t,attributes:a}}=e;return{value:n,label:t,attributes:a}})),h=(0,l.l)(y,((e,n)=>e.value===n.value));if(h.length>0)throw new Error('Docusaurus error: Duplicate values "'+h.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const v=null===m?m:null!=(n=null!=m?m:null==(t=f.find((e=>e.props.default)))?void 0:t.props.value)?n:f[0].props.value;if(null!==v&&!y.some((e=>e.value===v)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+v+'" but none of its children has the corresponding value. Available values are: '+y.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:N,setTabGroupChoices:w}=(0,s.U)(),[x,T]=(0,o.useState)(v),C=[],{blockElementScrollPositionUntilNextRender:E}=(0,u.o5)();if(null!=g){const e=N[g];null!=e&&e!==x&&y.some((n=>n.value===e))&&T(e)}const P=e=>{const n=e.currentTarget,t=C.indexOf(n),a=y[t].value;a!==x&&(E(n),T(a),null!=g&&w(g,String(a)))},L=e=>{var n;let t=null;switch(e.key){case"ArrowRight":{var a;const n=C.indexOf(e.currentTarget)+1;t=null!=(a=C[n])?a:C[0];break}case"ArrowLeft":{var o;const n=C.indexOf(e.currentTarget)-1;t=null!=(o=C[n])?o:C[C.length-1];break}}null==(n=t)||n.focus()};return o.createElement("div",{className:(0,r.Z)("tabs-container",c)},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":d},b)},y.map((e=>{let{value:n,label:t,attributes:i}=e;return o.createElement("li",(0,a.Z)({role:"tab",tabIndex:x===n?0:-1,"aria-selected":x===n,key:n,ref:e=>C.push(e),onKeyDown:L,onFocus:P,onClick:P},i,{className:(0,r.Z)("tabs__item",p,null==i?void 0:i.className,{"tabs__item--active":x===n})}),null!=t?t:n)}))),i?(0,o.cloneElement)(f.filter((e=>e.props.value===x))[0],{className:"margin-top--md"}):o.createElement("div",{className:"margin-top--md"},f.map(((e,n)=>(0,o.cloneElement)(e,{key:n,hidden:e.props.value!==x})))))}function m(e){const n=(0,i.Z)();return o.createElement(d,(0,a.Z)({key:String(n)},e))}},3274:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>l,metadata:()=>u,toc:()=>p});var a=t(7462),o=(t(7294),t(3905)),r=t(5488),i=t(5162);const l={sidebar_position:10},s="About",u={unversionedId:"ari/guides/pages/about",id:"ari/guides/pages/about",title:"About",description:"About page is a place to tell the world about yourself. About page started by AboutBlock, then you can write something more about yourself. Of course, you want to show your archievements using Facts component. Could not miss your history of working Resume.Experience, your education Resume.Education...",source:"@site/docs/ari/guides/pages/about.mdx",sourceDirName:"ari/guides/pages",slug:"/ari/guides/pages/about",permalink:"/docs/ari/guides/pages/about",draft:!1,editUrl:"https://github.com/chasoft/docs.chasoft.net/edit/master/docs/docs/ari/guides/pages/about.mdx",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10},sidebar:"tutorialSidebar",previous:{title:"Home",permalink:"/docs/ari/guides/pages/home"},next:{title:"Services",permalink:"/docs/ari/guides/pages/services"}},c={},p=[{value:"\ud83d\udcdd Forewords block",id:"-forewords-block",level:2},{value:"\ud83e\udd14 Want homepage as bioLink?",id:"-want-homepage-as-biolink",level:2}],d={toc:p};function m(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"about"},"About"),(0,o.kt)("p",null,"About page is a place to tell the world about yourself. About page started by ",(0,o.kt)("inlineCode",{parentName:"p"},"AboutBlock"),", then you can write something more about yourself. Of course, you want to show your archievements using ",(0,o.kt)("a",{parentName:"p",href:"/docs/ari/guides/content-blocks#facts"},(0,o.kt)("inlineCode",{parentName:"a"},"Facts"))," component. Could not miss your history of working ",(0,o.kt)("a",{parentName:"p",href:"/docs/ari/guides/content-blocks#resumeexprience"},(0,o.kt)("inlineCode",{parentName:"a"},"Resume.Experience")),", your education ",(0,o.kt)("a",{parentName:"p",href:"/docs/ari/guides/content-blocks#resumeeducation"},(0,o.kt)("inlineCode",{parentName:"a"},"Resume.Education")),"..."),(0,o.kt)("p",null,"About file is ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"app\\routes\\__layout\\about.tsx")),". It is safe for you to edit the lines between our markers."),(0,o.kt)(r.Z,{mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"File",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="app\\routes__layout\\about.tsx"',title:'"app\\routes__layout\\about.tsx"'},"...\n{\n  /*********************************\n  * \n  *   START PAGE CONTENT \n  * \n  ********************************/\n}\n\n//place your content for homepage here\n\n{\n  /*********************************\n  * \n  *   END PAGE CONTENT \n  * \n  ********************************/\n}\n...\n"))),(0,o.kt)(i.Z,{value:"Content blocks",mdxType:"TabItem"},(0,o.kt)("p",null,"Recommended content blocks for your about page"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/ari/guides/content-blocks#markdown"},"Markdown")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/ari/guides/content-blocks#facts"},"Facts")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/ari/guides/content-blocks#resume"},"Resume"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/ari/guides/content-blocks#experience"},"Resume.Experience")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/ari/guides/content-blocks#education"},"Resume.Education")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/ari/guides/content-blocks#testimonials"},"Testimonials"))),(0,o.kt)("p",null,"or you can use following blocks to enrich your about page"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/ari/guides/content-blocks#features"},"Features"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/ari/guides/content-blocks#featuressimplicity"},"Features.Simplicity")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/ari/guides/content-blocks#featuresblocks"},"Features.Blocks")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/ari/guides/content-blocks#featurespicture"},"Features.Picture")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/ari/guides/content-blocks#featuresart"},"Features.Art")))))),(0,o.kt)(i.Z,{value:"Examples",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'<LinksGrid links={linksGrid} className="mb-10" />\n\n<LatestPortfolio\n  display={["title", "image", "description"]}\n  limit={2}\n/>\n\n<LatestBlogPosts\n  display={["title", "image"]}\n  limit={2}\n  showAsColumn\n/>\n\n<LatestContent.Note />\n<LatestContent.Announcement />\n<LatestContent.Update />\n\n<Markdown.Wrapper>\n  <Component />\n</Markdown.Wrapper>\n\n<TextHeader text={t("Curated links for your best")} />\n<LinksList links={linksList} className="my-10" />\n')))),(0,o.kt)("h2",{id:"-forewords-block"},"\ud83d\udcdd Forewords block"),(0,o.kt)("p",null,"All content should be composed using Markdown format. That's why we created a special file just for you to write for the homepage."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Data file is ",(0,o.kt)("inlineCode",{parentName:"p"},"~/data/content/foreword.mdx"),". Open this file and feel free to edit, write... anything you like.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"To display this content, you would need to:"),(0,o.kt)("ol",{parentName:"li"},(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Import the files to ",(0,o.kt)("inlineCode",{parentName:"p"},"app\\routes\\__layout\\index.tsx"),". But don't worry, it is declared already."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import Component from "~/data/content/foreword.mdx"\nimport Markdown from "~/components/Markdown"\n'))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Paste this code to the your desired place in ",(0,o.kt)("inlineCode",{parentName:"p"},"app\\routes\\__layout\\index.tsx")),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"<Markdown.Wrapper>\n  <Component />\n</Markdown.Wrapper>\n")))))),(0,o.kt)("h2",{id:"-want-homepage-as-biolink"},"\ud83e\udd14 Want homepage as bioLink?"),(0,o.kt)("p",null,"If you want you homepage as a bioLink, which display a list of links. You can use following sample:"),(0,o.kt)(r.Z,{mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"Examples 1",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'<TextHeader text={t("Curated links for your best")} />\n<LinksList links={linksList} className="my-10" />\n'))),(0,o.kt)(i.Z,{value:"Data",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'export const linksList: LinkMeta[] = [\n  {\n    type: undefined,\n    title: "Upcoming events",\n    description: "Upcoming events",\n    slug: "/",\n    iconPicture: undefined\n  },\n  {\n    type: "zip",\n    title: "All chess matches with comments",\n    description: "Collected from 3 millions matches",\n    slug: "/",\n    iconPicture: undefined,\n    decoration: {\n      backgroundColor: ["blue", "red", "white"]\n    }\n  },\n  {\n    type: "xls",\n    title: "Dashboard for lazy man",\n    description: "Automate your daily tasks",\n    slug: "/",\n    iconPicture: undefined,\n    decoration: {\n      isBold: true,\n      isItalic: true\n    }\n  },\n  {\n    type: "youtube",\n    title: "My programming youtube channel",\n    slug: "/contact",\n    iconPicture: undefined,\n    decoration: {\n      isItalic: true\n    }\n  },\n  {\n    type: "cv",\n    title: "Curriculum vitae of Brian",\n    slug: "/files/mycv.pdf",\n    iconPicture: "/img/background/placeholder.svg",\n    decoration: {\n      isDownloadable: true\n    }\n  },\n]\n'))),(0,o.kt)(i.Z,{value:"Type declaration",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'/**\n * This is to build links list for homepage\n * to fullfill the features of biolink services\n */\ntype LinkMeta = {\n  /**\n   * if you set a type for a link\n   * we will show an icon for the link (default icon)\n   * if you don\'t set imageUrl.\n   */\n  type?: LinkMetaType\n  title: string,\n  description?: string\n  slug: string,\n  iconPicture?: string,\n  decoration?: {\n    /**\n     * we will fill gradient the background\n     * 1st & 2nd is background gradient\n     * 3rd is text-color\n     */\n    backgroundColor?: [string, string, string]\n    isTextCenter?: boolean\n    isBold?: boolean\n    isItalic?: boolean\n    isDownloadable?: boolean\n  }\n}\n\ntype LinkMetaType =\n  | "pdf"\n  | "doc"\n  | "link"\n  | "youtube"\n  | "ppt"\n  | "powerpoint"\n  | "excel"\n  | "xls"\n  | "word"\n  | "cv"\n  | "resume"\n  | "facebook"\n  | "linkedin"\n  | "tiktok"\n  | "instagram"\n  | "messenger"\n  | "hotline"\n  | "telephone"\n  | "phone"\n  | "shopping"\n  | "video"\n  | "laptop"\n  | "computer"\n  | "hardware"\n  | "zip"\n')))),(0,o.kt)("p",null,"Or you can combile ",(0,o.kt)("inlineCode",{parentName:"p"},"LinksGrid")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"LinksList")),(0,o.kt)(r.Z,{mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"Examples 1",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'<LinksGrid links={linksGrid} className="mb-10" />\n<TextHeader text={t("Curated links for your best")} />\n<LinksList links={linksList} className="my-10" />\n'))),(0,o.kt)(i.Z,{value:"Data",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'export const linksGrid: LinkMeta[] = [\n  {\n    title: "link1",\n    slug: "/about",\n    iconPicture: "/img/background/placeholder.svg",\n  },\n  {\n    title: "link2",\n    slug: "/terms-of-service",\n    iconPicture: "/img/background/placeholder.svg",\n  },\n  {\n    title: "link3",\n    slug: "https://twitter.com/",\n    iconPicture: "/img/background/placeholder.svg",\n    decoration: {\n      isBold: true,\n      isItalic: true\n    }\n  },\n  {\n    title: "link4",\n    slug: "/contact",\n    iconPicture: "/img/background/placeholder.svg",\n    decoration: {\n      isItalic: true\n    }\n  }\n]\n\nexport const linksList: LinkMeta[] = [\n  {\n    type: undefined,\n    title: "Upcoming events",\n    description: "Upcoming events",\n    slug: "/",\n    iconPicture: undefined\n  },\n  {\n    type: "zip",\n    title: "All chess matches with comments",\n    description: "Collected from 3 millions matches",\n    slug: "/",\n    iconPicture: undefined,\n    decoration: {\n      backgroundColor: ["blue", "red", "white"]\n    }\n  },\n  {\n    type: "xls",\n    title: "Dashboard for lazy man",\n    description: "Automate your daily tasks",\n    slug: "/",\n    iconPicture: undefined,\n    decoration: {\n      isBold: true,\n      isItalic: true\n    }\n  },\n  {\n    type: "youtube",\n    title: "My programming youtube channel",\n    slug: "/contact",\n    iconPicture: undefined,\n    decoration: {\n      isItalic: true\n    }\n  },\n  {\n    type: "cv",\n    title: "Curriculum vitae of Brian",\n    slug: "/files/mycv.pdf",\n    iconPicture: "/img/background/placeholder.svg",\n    decoration: {\n      isDownloadable: true\n    }\n  },\n]\n'))),(0,o.kt)(i.Z,{value:"Type declaration",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'/**\n * This is to build links list for homepage\n * to fullfill the features of biolink services\n */\ntype LinkMeta = {\n  /**\n   * if you set a type for a link\n   * we will show an icon for the link (default icon)\n   * if you don\'t set imageUrl.\n   */\n  type?: LinkMetaType\n  title: string,\n  description?: string\n  slug: string,\n  iconPicture?: string,\n  decoration?: {\n    /**\n     * we will fill gradient the background\n     * 1st & 2nd is background gradient\n     * 3rd is text-color\n     */\n    backgroundColor?: [string, string, string]\n    isTextCenter?: boolean\n    isBold?: boolean\n    isItalic?: boolean\n    isDownloadable?: boolean\n  }\n}\n\ntype LinkMetaType =\n  | "pdf"\n  | "doc"\n  | "link"\n  | "youtube"\n  | "ppt"\n  | "powerpoint"\n  | "excel"\n  | "xls"\n  | "word"\n  | "cv"\n  | "resume"\n  | "facebook"\n  | "linkedin"\n  | "tiktok"\n  | "instagram"\n  | "messenger"\n  | "hotline"\n  | "telephone"\n  | "phone"\n  | "shopping"\n  | "video"\n  | "laptop"\n  | "computer"\n  | "hardware"\n  | "zip"\n')))))}m.isMDXComponent=!0}}]);